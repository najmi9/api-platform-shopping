parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    acme_api.event.jwt_created_listener:
        class: App\Events\JWTEvents\JWTCreatedListener
        arguments: [ '@request_stack' ]
        tags:
           - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\Events\DoctrineEvents\UserConfurmationEmailListener:
        tags:
            -
                name: 'doctrine.orm.entity_listener'
                event: 'postPersist'
                entity: 'App\Entity\User'

                # set the 'lazy' option to TRUE to only instantiate listeners when they are used
                lazy: true
    'App\Doctrine\CurrentUserExtension':
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
            - { name: api_platform.doctrine.orm.query_extension.item }
    'App\Dto\ForgotPasswordRequest': ~
            
    